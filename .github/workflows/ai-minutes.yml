name: AI-Powered Meeting Minutes

on:
  schedule:
    # Runs at 8:00 AM IST (2:30 AM UTC) Monday-Friday
    - cron: '30 2 * * 1-5'
  
  workflow_dispatch:
    inputs:
      transcript_file:
        description: Path to transcript file
        required: false
        type: string
  
  push:
    paths:
      - 'transcripts/**/*.txt'
      - 'transcripts/**/*.vtt'

permissions:
  contents: write

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  CONFLUENCE_URL: ${{ secrets.CONFLUENCE_URL }}
  CONFLUENCE_USERNAME: ${{ secrets.CONFLUENCE_USERNAME }}
  CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
  CONFLUENCE_SPACE_KEY: ${{ secrets.CONFLUENCE_SPACE_KEY }}

jobs:
  generate-ai-minutes:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install openai==0.28.0 requests python-docx
    
    - name: Find today's transcript
      id: find-transcript
      run: |
        # For scheduled runs, find the most recent transcript
        if [ "${{ github.event_name }}" == "schedule" ]; then
          echo "Scheduled run - finding most recent transcript"
          # Get the most recent .txt or .vtt file in transcripts folder
          TRANSCRIPT_FILE=$(find transcripts -type f \( -name "*.txt" -o -name "*.vtt" \) -not -name ".gitkeep" -printf '%T@ %p\n' 2>/dev/null | sort -rn | head -1 | cut -d' ' -f2)
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          if [ -n "${{ github.event.inputs.transcript_file }}" ]; then
            TRANSCRIPT_FILE="${{ github.event.inputs.transcript_file }}"
          else
            # If no input provided, get the most recent file
            TRANSCRIPT_FILE=$(find transcripts -type f \( -name "*.txt" -o -name "*.vtt" \) -not -name ".gitkeep" -printf '%T@ %p\n' 2>/dev/null | sort -rn | head -1 | cut -d' ' -f2)
          fi
        else
          # For push events
          TRANSCRIPT_FILE=$(git diff --name-only HEAD HEAD~1 | grep -E 'transcripts/.*\.(txt|vtt)' | head -1)
        fi
        
        if [ -z "$TRANSCRIPT_FILE" ] || [ ! -f "$TRANSCRIPT_FILE" ]; then
          echo "No transcript found"
          echo "Contents of transcripts folder:"
          ls -la transcripts/
          exit 1
        fi
        
        echo "transcript_file=$TRANSCRIPT_FILE" >> $GITHUB_OUTPUT
        echo "Processing: $TRANSCRIPT_FILE"
    
    - name: Process with AI
      run: |
        python scripts/ai_minutes_generator.py "${{ steps.find-transcript.outputs.transcript_file }}" \
          --output-dir minutes \
          --date $(date +%Y-%m-%d) \
          --openai-key "${{ env.OPENAI_API_KEY }}" \
          --confluence-url "${{ env.CONFLUENCE_URL }}" \
          --confluence-username "${{ env.CONFLUENCE_USERNAME }}" \
          --confluence-token "${{ env.CONFLUENCE_API_TOKEN }}" \
          --confluence-space "${{ env.CONFLUENCE_SPACE_KEY }}"
    
    - name: Commit and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add minutes/
        git commit -m "Meeting minutes for $(date +%Y-%m-%d)" || echo "No changes"
        git push || true
