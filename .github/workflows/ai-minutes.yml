name: AI-Powered Meeting Minutes

on:
  workflow_dispatch:
    inputs:
      transcript_file:
        description: Path to transcript file
        required: true
        type: string
        default: transcripts/test.txt
  
  push:
    paths:
      - transcripts/**/*.txt
      - transcripts/**/*.docx

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  generate-ai-minutes:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install openai==0.28.0 requests python-docx
        echo "Dependencies installed successfully"
    
    - name: Find transcript to process
      id: find-transcript
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          TRANSCRIPT_FILE="${{ github.event.inputs.transcript_file }}"
        else
          TRANSCRIPT_FILE="transcripts/test.txt"
        fi
        
        echo "transcript_file=$TRANSCRIPT_FILE" >> $GITHUB_OUTPUT
        echo "Found transcript: $TRANSCRIPT_FILE"
    
    - name: Process transcript with AI (Local Only)
      id: process
      run: |
        echo "Processing transcript with AI (without Confluence)..."
        
        python scripts/ai_minutes_generator.py "${{ steps.find-transcript.outputs.transcript_file }}" \
          --output-dir minutes \
          --date $(date +%Y-%m-%d) \
          --openai-key "${{ env.OPENAI_API_KEY }}"
        
        echo "AI processing complete!"
    
    - name: Display generated minutes
      run: |
        echo "=== Generated Minutes ==="
        if [ -f minutes/*.html ]; then
          echo "HTML file generated:"
          ls -la minutes/*.html
          echo "--- Preview (first 500 chars) ---"
          head -c 500 minutes/*.html
        fi
        if [ -f minutes/*.json ]; then
          echo "JSON data generated:"
          cat minutes/*.json
        fi
    
    - name: Commit generated minutes
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add minutes/
        git commit -m "AI-generated meeting minutes for $(date +%Y-%m-%d)" || echo "No changes to commit"
        git push || true
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: meeting-minutes
        path: minutes/
